generator client {
  provider = "prisma-client-js"
  output   = "./generated/shipconduct"
}

datasource dbShipConduct {
  provider = "sqlserver"
  url      = env("DATABASE_SHIPCONDUCT_URL")
}

model Ms_AssessmentCategory {
  Id           BigInt    @id(map: "PK_AssessmentCategory") @default(autoincrement())
  VslType      String    @dbShipConduct.VarChar(50)
  Item         String    @dbShipConduct.VarChar(250)
  Interval     String?   @dbShipConduct.VarChar(250)
  ShipSection  String?   @dbShipConduct.VarChar(250)
  CreatedBy    String?   @dbShipConduct.VarChar(50)
  CreatedDate  DateTime? @dbShipConduct.DateTime
  ModifiedBy   String?   @dbShipConduct.VarChar(50)
  ModifiedDate DateTime? @dbShipConduct.DateTime
}

model Tr_VesselAssessment {
  Id                        BigInt                      @id(map: "PK_Tr_VesselAssessment") @default(autoincrement())
  VslType                   String                      @dbShipConduct.VarChar(50)
  VslName                   String                      @dbShipConduct.VarChar(150)
  PeriodDate                DateTime                    @dbShipConduct.DateTime
  FinalDate                 DateTime                    @dbShipConduct.DateTime
  GradeTotal                Decimal                     @default(0, map: "DF_Tr_VesselAssessment_TotalScore") @dbShipConduct.Decimal(18, 2)
  Description               String?                     @dbShipConduct.VarChar(250)
  Status                    String?                     @dbShipConduct.VarChar(50)
  LinkShared                String?                     @dbShipConduct.VarChar(250)
  CreatedBy                 String?                     @dbShipConduct.VarChar(50)
  CreatedDate               DateTime?                   @dbShipConduct.DateTime
  ModifiedBy                String?                     @dbShipConduct.VarChar(50)
  ModifiedDate              DateTime?                   @dbShipConduct.DateTime
  Tr_VesselAssessmentDetail Tr_VesselAssessmentDetail[]
}

model Tr_VesselAssessmentDetail {
  Id                  BigInt              @id(map: "PK_Tr_VesselAssessmentDetail") @default(autoincrement())
  VesselAssessmentId  BigInt
  Item                String              @dbShipConduct.VarChar(250)
  Interval            String?             @dbShipConduct.VarChar(250)
  ShipSection         String?             @dbShipConduct.VarChar(250)
  Grade               Decimal             @default(0, map: "DF_Tr_VesselAssessmentDetail_Score") @dbShipConduct.Decimal(18, 2)
  Description         String?             @dbShipConduct.VarChar(250)
  FileName            String?             @dbShipConduct.VarChar(150)
  SmallFileLink       String?             @dbShipConduct.VarChar(250)
  NormalFileLink      String?             @dbShipConduct.VarChar(250)
  IsDeleted           Boolean             @default(false, map: "DF_Tr_VesselAssessmentDetail_IsDeleted")
  UploadedBy          String?             @dbShipConduct.VarChar(150)
  UploadedDate        DateTime?           @dbShipConduct.DateTime
  AssessedBy          String?             @dbShipConduct.VarChar(150)
  AssessedDate        DateTime?           @dbShipConduct.DateTime
  CreatedBy           String?             @dbShipConduct.VarChar(150)
  CreatedDate         DateTime?           @dbShipConduct.DateTime
  ModifiedBy          String?             @dbShipConduct.VarChar(150)
  ModifiedDate        DateTime?           @dbShipConduct.DateTime
  Tr_VesselAssessment Tr_VesselAssessment @relation(fields: [VesselAssessmentId], references: [Id], onUpdate: NoAction, map: "FK_Tr_VesselAssessmentDetail_Tr_VesselAssessment")
}
